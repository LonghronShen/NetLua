{"name":"Netlua","tagline":"Completely managed .NET Lua","body":"NetLua\r\n======\r\n\r\nProject description\r\n-------------------\r\n\r\nNetLua is a completely managed interpreter for the Lua dynamic language.\r\nIt was inspired by (and the LuaObject class is loosely based on) AluminumLua\r\nby Alexander Corrado.\r\nCheck his project out at http://github.com/chkn/AluminumLua\r\n\r\nWhy?\r\n----\r\n\r\nI started this project because I needed a managed Lua interpreter and AluminumLua\r\nhad a few bugs and caveats that were difficult to solve because of its structure.\r\nI so decided to do my own attempt at it.\r\n\r\nSource code parsing\r\n-------------------\r\n\r\nAs of now, the parsing is made using Irony, but any LALR parser can be used\r\nto build the internal AST interpreted by NetLua.\r\nIrony looks a bit slow, but it is the easiest solution for a neat C# LALR Parser.\r\n\r\nExamples\r\n========\r\n\r\nUsing Lua from C#\r\n-----------------\r\n\r\n```c#\r\nLua lua = new Lua();\r\nlua.DoString(\"a={4, b=6, [7]=10}\"); // Interpreting Lua\r\n\r\nvar a = lua.Context.Get(\"a\"); // Accessing Lua from C#\r\nvar a_b = a[\"b\"].AsNumber();\r\n\r\ndouble number = a[7]; // Automatic type coercion\r\n```\r\n\r\nRegistering C# methods\r\n----------------------\r\n\r\n```c#\r\nstatic LuaArguments print(LuaArguments args)\r\n{\r\n  string[] strings = Array.ConvertAll<LuaObject, string>(args, x => x.ToString()); // LuaArguments can be used as a LuaObject array\r\n  Console.WriteLine(String.Join(\"\\t\", strings));\r\n  return Lua.Return(); // You can use the Lua.Return helper function to return values\r\n}\r\n\r\nLua lua = new Lua();\r\nlua.Context.SetGlobal(\"print\", (LuaFunction)print);\r\n```\r\n\r\nUsing .NET 4.0 dynamic features\r\n-------------------------------\r\n\r\n```c#\r\nLua lua = new Lua();\r\ndynamic luaVariable = lua.DynamicContext.var; // Lua.DynamicContext provides a dynamic version of Lua.Context\r\n\r\ndouble a = luaVariable.numberValue; // Automatic type casting\r\ndouble d = luaVariable.someFunc(a); // Automatic function arguments and result boxing / unboxing\r\n\r\nlua.DynamicContext.x = 5;\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}